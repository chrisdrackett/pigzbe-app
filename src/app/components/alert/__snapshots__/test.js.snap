// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert renders correctly with error prop 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ff0000",
      "flex": 1,
      "flexDirection": "row",
      "height": 80,
      "justifyContent": "space-between",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#ffffff",
        "fontFamily": "Poppins",
        "fontSize": 16,
        "marginBottom": 20,
        "marginLeft": 40,
        "marginRight": 20,
        "marginTop": 20,
        "textAlign": "left",
      }
    }
  >
    Testing
  </Text>
  <View
    style={
      Object {
        "marginRight": 20,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "alignSelf": "stretch",
              "color": "#000000",
              "fontFamily": "Poppins",
              "fontSize": 18,
              "height": 50,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 10,
              "textAlign": "center",
            },
            Object {
              "color": "#ffffff",
              "textDecorationColor": "#ffffff",
              "textDecorationLine": "underline",
              "textDecorationStyle": "solid",
            },
          ]
        }
      >
        dismiss
      </Text>
    </View>
  </View>
</View>
`;

exports[`Alert renders correctly without error prop 1`] = `null`;
